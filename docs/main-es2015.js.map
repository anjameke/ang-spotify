{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/album/album.component.ts","./src/app/components/album/album.component.html","./src/app/components/app.component.ts","./src/app/components/app.component.html","./src/app/components/artist/artist.component.ts","./src/app/components/artist/artist.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/noPageFound/noPageFound.component.ts","./src/app/components/noPageFound/noPageFound.component.html","./src/app/components/playlist/playlist.component.ts","./src/app/components/playlist/playlist.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/components/track/track.component.ts","./src/app/components/track/track.component.html","./src/app/services/spotify.service.ts","./src/app/validators/forbiddenCharacterValidator.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchComponent } from './components/search/search.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { ArtistComponent } from './components/artist/artist.component';\nimport { AlbumComponent } from './components/album/album.component';\nimport { TrackComponent } from './components/track/track.component';\nimport { PlaylistComponent } from './components/playlist/playlist.component';\nimport { NoPageFoundComponent } from './components/noPageFound/noPageFound.component';\n\nconst routes: Routes = [\n  { path: '', component:SearchComponent},\n  { path: 'about', component:AboutComponent},\n  { path: 'artist/:id', component:ArtistComponent},\n  { path: 'album/:id', component:AlbumComponent},\n  { path: 'track/:id', component:TrackComponent},\n  { path: 'playlist', component:PlaylistComponent},\n  { path : '**', component:NoPageFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MatRadioModule} from '@angular/material/radio';\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatInputModule } from '@angular/material/input'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { ArtistComponent } from './components/artist/artist.component';\nimport { AlbumComponent } from './components/album/album.component';\nimport { TrackComponent } from './components/track/track.component';\nimport { PlaylistComponent } from './components/playlist/playlist.component';\nimport { NoPageFoundComponent } from './components/noPageFound/noPageFound.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SearchComponent,\n    AboutComponent,\n    ArtistComponent,\n    AlbumComponent,\n    TrackComponent,\n    PlaylistComponent,\n    NoPageFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'about',\n  templateUrl: 'about.component.html',\n  styleUrls: ['about.component.scss']\n})\nexport class AboutComponent {\n  \n}\n","<h4 class=\"title-header\">\n    This is a web app written in Typescript leveraging Angular9 to let users search artists, tracks, or\n    create their own playlists (in progress)...\n</h4>","import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from '../../services/spotify.service';\nimport { Artist } from '../../models/Artist';\nimport { Album } from '../../models/Album';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'album',\n  templateUrl: 'album.component.html',\n  providers: [SpotifyService]\n})\nexport class AlbumComponent implements OnInit {\n  \n    public id: string;\n    \n    // currently lazy and i don't wanna make all of spotify's associated classes w/n\n    // the model folder. This is json anyways, might as well just parse.\n    public album: any;\n\n    constructor(private spotifyService:SpotifyService,\n                private route:ActivatedRoute) { }\n\n    ngOnInit() {\n        this.route.params\n            .map(params => params['id'])\n            .subscribe((id) => {\n                this.spotifyService.getAuth()\n                    .subscribe(res => {\n                        this.spotifyService.getAlbum(id, res.access_token)\n                        .subscribe(album => {\n                            console.log(album.items);\n                            this.album = album;\n                        });\n                    });\n            });\n    }\n}\n","<div id=\"album\" *ngIf=\"album\">\n    <header class=\"album-header\">\n        <div class=\"album-container\">\n            <!-- <div class=\"col-md-3\"> -->\n                <div *ngIf=\"album.images.length > 0\">\n                    <img class=\"album-album-thumb\" src=\"{{album.images[0].url}}\">\n                </div>\n            <!-- </div> -->\n            <div class=\"col-md-8\">\n                <h4 *ngIf=\"album.artists.length > 0\">\n                    <span *ngFor=\"let artist of album.artists\">\n                        {{artist.name}} \n                    </span>\n                </h4>\n                <h2>{{album.name}}</h2>\n                <h5>Release Date: {{album.release_date}}</h5>\n                <a class=\"btn btn-primary\" href=\"{{album.external_urls.spotify}}\">View in Spotify</a>\n            </div>\n            <!-- <iframe src=\"https://open.spotify.com/embed/album/{{album.id}}\" width=\"376\" height=\"456\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe> -->\n        </div>\n    </header>\n    <div class=\"album-tracks\">\n        <h2>Album Tracks</h2>\n        <div class=\"tracks-container\" *ngFor=\"let track of album.tracks.items\">\n            <div class=\"well track\">\n                <h5>{{track.track_number}} - {{track.name}}</h5>\n                <a href=\"{{track.preview_url}}\" target=\"_blank\">Preview Track</a>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SearchComponent } from './search/search.component';\nimport { AboutComponent } from './about/about.component';\nimport { AlbumComponent } from './album/album.component';\nimport { TrackComponent } from './track/track.component';\nimport { PlaylistComponent } from './playlist/playlist.component';\nimport { SpotifyService } from '../services/spotify.service'\nimport { HttpModule } from '@angular/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [HttpModule, SpotifyService]\n})\nexport class AppComponent {\n  title = 'ang-spotify';\n}\n","<navbar></navbar>\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from '../../services/spotify.service';\nimport { Artist } from '../../models/Artist';\nimport { Album } from '../../models/Album';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'artist',\n  templateUrl: 'artist.component.html',\n  providers: [SpotifyService]\n})\nexport class ArtistComponent implements OnInit {\n  \n    public id: string;\n    \n    // currently lazy and i don't wanna make all of spotify's associated classes w/n\n    // the model folder. This is json anyways, might as well just parse.\n    public artist: any;\n    public albums: Array<Map<any, any>>;\n\n    constructor(private spotifyService:SpotifyService,\n                private route:ActivatedRoute) { }\n\n    ngOnInit() {\n        this.route.params\n            .map(params => params['id'])\n            .subscribe((id) => {\n                this.spotifyService.getAuth()\n                    .subscribe(res => {\n                        this.spotifyService.getArtist(id, 'artist', res.access_token)\n                        .subscribe(artist => {\n                            this.artist = artist;\n                        });\n                        this.spotifyService.getAlbums(id, res.access_token)\n                        .subscribe(albums => {\n                            console.log(albums.items);\n                            let dupeAlbums = albums.items;\n                            this.albums = dupeAlbums.filter((e, i) => dupeAlbums\n                                                    .findIndex(a => a.name.toLowerCase() === e.name.toLowerCase()) === i)\n                        });\n                    });\n            });\n    }\n}\n","<div *ngIf=\"artist\">\n    <header class=\"artist-header\">\n        <div *ngIf=\"artist.images.length > 0\">\n            <img class=\"artist-thumb rounded-circle\" src=\"{{artist.images[0].url}}\">\n        </div>\n        <h1>{{artist.name}}</h1>\n        <p *ngIf=\"artist.genres.length > 0\">\n            Genres: <span *ngFor=\"let genre of artist.genres\">{{genre}} </span>\n        </p>\n    </header>\n    <div class=\"artist-albums container-fluid content-row\">\n        <div class=\"row\">\n            <div class=\"col-md-3 d-flex align-items-stretch\" *ngFor=\"let album of albums\">\n                <div class=\"card h-100\">\n                    <div class=\"well album\">\n                        <div *ngIf=\"album.images.length > 0\">\n                            <img class=\"album-thumb img-thumbnail\" src=\"{{album.images[0].url}}\">\n                            <h4>{{album.name}}</h4>\n                            <a class=\"btn btn-default btn-block\" routerLink=\"/album/{{album.id}}\">Album Details</a>\n                        </div>\n                    </div>\n                </div>\n             </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: 'navbar.component.html',\n  styleUrls: ['navbar.component.scss']\n})\nexport class NavbarComponent {\n  \n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n    <a class=\"navbar-brand\" href=\"#\">Spotify Playlist & Search Web App</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" [routerLink]=\"['']\">Search <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['/about']\">About</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['/playlist']\">Playlist</a>\n        </li>\n      </ul>\n    </div>\n  </nav>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'noPageFound',\n  templateUrl: 'noPageFound.component.html',\n})\n\nexport class NoPageFoundComponent { }","<div class=\"col-md-12\">\n    <div class=\"error-template\">\n        <h3>Oops!</h3>\n        <h2>404 Not Found</h2>\n        <div class=\"error-details mb-3\">\n            Sorry, Requested page not found!\n        </div>\n        <div class=\"error-actions\">\n            <a routerLink=\"/\" class=\"btn btn-danger btn-lg\">\n                Go Back to Home\n            </a>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ChangeDetectorRef, Input, Output, Directive } from '@angular/core';\nimport { SpotifyService } from '../../services/spotify.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/internal/operators';\nimport { forbiddenCharacterValidator } from '../../validators/forbiddenCharacterValidator';\n\n@Component({\n  selector: 'playlist',\n  templateUrl: 'playlist.component.html',\n  providers: [SpotifyService]\n})\n\n\nexport class PlaylistComponent implements OnInit {\n\n  public query: FormControl = new FormControl(\"\", [Validators.minLength(1), forbiddenCharacterValidator(/[^\\.,]/g)]);\n  public name: FormControl = new FormControl(\"\", Validators.required);\n\n\n  constructor(private spotifyService: SpotifyService,\n              private cd: ChangeDetectorRef) {\n\n  }\n\n  ngOnInit() {\n\n    // this.search.get('isSearch').valueChanges.pipe(distinctUntilChanged());\n    // this.search.get('searchQuery').valueChanges\n\n    this.name.valueChanges\n      .pipe(\n        filter(input => input.length >=1 ),\n        debounceTime(400),\n        distinctUntilChanged()\n      )\n    this.query.valueChanges\n      .pipe(\n        filter(input => input.length >= 1),\n        debounceTime(400),\n        distinctUntilChanged()\n      ).subscribe(res => {console.log(this.query.value); console.log(this.query.errors)});\n      // console.log(this.query.value);\n    //   .subscribe(query => this.spotifyService.getAuth()\n    //     .subscribe(res => this.spotifyService.searchMusic(query, this.searchType, res.access_token).subscribe(\n    //       res => {\n    //         console.log(this.searchType);\n    //         if (this.searchType === 'artist') {\n    //           this.results = res.artists.items\n    //         } else {\n    //           // /v1/search returns albums info with the tracks blurb, let's purge those so that\n    //           // calling track.id is accurate.\n    //           this.results = res.tracks.items.map(({album, ...items}) => items);\n    //         }\n    //         console.log(this.results);\n    //       })\n    //     ));\n  }\n\n  onSubmit() {\n    this.query.valueChanges.subscribe(q => \n        this.spotifyService.getAuth()\n            .subscribe(res => \n              this.spotifyService.createPlaylist(this.name.value, true, '', res.access_token)))\n  }\n\n}\n","<h1 class=\"title-header\">Create Playlist</h1>\n<div class=\"form-group\">\n    <div class=\"input-container\">\n        <h6>Playlist name</h6>\n        <input type=\"text\" [formControl]=\"name\" class=\"form-control\" placeholder=\"My default playlist\">\n    </div>\n    <div class=\"input-container\">\n        <h6>Tracks for playlist</h6>\n        <input type=\"text\" [formControl]=\"query\" class=\"form-control\" placeholder=\"Enter comma separated list of tracks\">\n        <div *ngIf=\"query.errors\" class=\"error\"><i>Track list cannot contain special characters</i></div>\n        <button type=\"submit\" class=\"btn btn-primary create-playlist-btn\" [disabled]=\"query.value < 1 || query.errors\">Create playlist</button>\n    </div>\n</div>","import { Component, OnInit, ChangeDetectorRef, Input, Output, Directive } from '@angular/core';\nimport { SpotifyService } from '../../services/spotify.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/internal/operators';\nimport { Artist } from '../../models/Artist';\n\n@Component({\n  selector: 'search',\n  templateUrl: 'search.component.html',\n  styleUrls: ['search.component.scss'],\n  providers: [SpotifyService]\n})\n\n\nexport class SearchComponent implements OnInit {\n\n  // public searchStr: string;\n  public results: any;\n  public query: FormControl = new FormControl(\"\", Validators.minLength(1));\n\n  public searchType: string;\n\n  public search: FormGroup = new FormGroup({\n      searchAllowed: new FormControl(this.searchType, Validators.required),\n      searchQuery: new FormControl(\"\", Validators.minLength(1)),\n      isSearch: new FormControl(this.searchType, Validators.required)\n  });\n\n  constructor(private spotifyService: SpotifyService,\n              private cd: ChangeDetectorRef) {\n\n  }\n\n  ngOnInit() {\n    this.checkSearch();\n    this.search.get('isSearch').valueChanges.pipe(distinctUntilChanged());\n    this.search.get('searchQuery').valueChanges\n      .pipe(\n        filter(input => input.length >= 1),\n        debounceTime(400),\n        distinctUntilChanged()\n      )\n      .subscribe(query => this.spotifyService.getAuth()\n        .subscribe(res => this.spotifyService.searchMusic(query, this.searchType, res.access_token).subscribe(\n          res => {\n            console.log(this.searchType);\n            if (this.searchType === 'artist') {\n              this.results = res.artists.items\n            } else {\n              // /v1/search returns albums info with the tracks blurb, let's purge those so that\n              // calling track.id is accurate.\n              this.results = res.tracks.items.map(({album, ...items}) => items);\n            }\n          })\n        ));\n  }\n\n  onSearchChange(search:string) {\n    this.searchType = search;\n    this.cd.markForCheck();\n  }\n\n  checkSearch() {\n    this.search.get('searchAllowed').valueChanges.\n      subscribe(searchable => {\n        if (this.isNotSearchable()) {\n          this.search.get('searchAllowed').reset();\n          this.search.get('searchAllowed').disable();\n        } else {\n          this.search.get('searchAllowed').enable();\n        }\n      });\n  }\n\n  public isNotSearchable() {\n    return !this.searchType || this.searchType.length === 0;\n  }\n\n  public isArtistSearch() {\n    return this.searchType === 'artist';\n  }\n}\n","<h1 *ngIf=\"isNotSearchable()\" class=\"title-header\">Looking for a Track or Artist?</h1>\n<h1 *ngIf=\"isArtistSearch()\" class=\"title-header\">Looking for an {{searchType.charAt(0).toUpperCase() + searchType.slice(1)}}?</h1>\n<h1 *ngIf=\"!isNotSearchable() && !isArtistSearch()\" class=\"title-header\">Looking for a {{searchType.charAt(0).toUpperCase() + searchType.slice(1)}}?</h1>\n<p class=\"lead\">You can use this web app to find your favorite {{isNotSearchable() ? \"tracks or artist\" : searchType}}s, ala Spotify!</p>\n<form>\n    <div class=\"form-group\">\n        <form [formGroup]=\"search\">\n            <div *ngIf=\"searchType\">\n                <input type=\"text\" formControlName=\"searchQuery\" class=\"form-control\" placeholder=\"{{searchType}}s...\">\n            </div>\n        </form>\n        <label id=\"search-type\">Select search type</label>\n        <mat-radio-group \n            aria-labelledby=\"radio-group-label\" \n            class=\"radio-group\"\n            [(ngModel)]=\"searchType\"\n            name=\"searchType\">\n            <mat-radio-button class=\"radio-button\" value=\"artist\" (click)=\"search.get('searchQuery').reset(''); results = null;\" (ngModelChange)=\"onSearchChange($event)\">artist</mat-radio-button>\n            <mat-radio-button class=\"radio-button\" value=\"track\" (click)=\"search.get('searchQuery').reset(''); results = null;\" (ngModelChange)=\"search.get('searchQuery').reset(''); onSearchChange($event)\">track</mat-radio-button>\n        </mat-radio-group>\n    </div>\n</form>\n\n<div *ngIf=\"results\">\n    <div *ngFor=\"let result of results\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"search-results well\">\n                    <h4 *ngIf=\"isArtistSearch()\">\n                        <a routerLink=\"/artist/{{result.id}}\">{{result.name}}</a>\n                    </h4>\n                    <h4 *ngIf=\"!isArtistSearch()\">\n                        <a routerLink=\"/track/{{result.id}}\">{{result.name}}</a>\n                    </h4>\n                    <div *ngIf=\"searchType === 'artist'\">\n                        <strong>Genres: </strong>\n                        <span *ngFor=\"let genres of result.genres\">{{genres}} </span>\n                    </div>\n                    <div *ngIf=\"searchType === 'track'\">\n                        <strong>Arist: </strong>\n                        <span *ngFor=\"let artist of result.artists\">{{artist.name}} </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from '../../services/spotify.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'track',\n  templateUrl: 'track.component.html',\n  providers: [SpotifyService]\n})\nexport class TrackComponent implements OnInit {\n  \n    public id: string;\n    \n    // currently lazy and i don't wanna make all of spotify's associated classes w/n\n    // the model folder. This is json anyways, might as well just parse.\n    public track: any;\n    // public albums: Array<Map<any, any>>;\n\n    constructor(private spotifyService:SpotifyService,\n                private route:ActivatedRoute) { }\n\n    ngOnInit() {\n        this.route.params\n            .map(params => params['id'])\n            .subscribe((id) => {\n                this.spotifyService.getAuth()\n                    .subscribe(res => {\n                        this.spotifyService.getTrack(id, res.access_token)\n                            .subscribe(track => {\n                                this.track = track;\n                            });\n                    });\n            });\n    }\n}\n","<div *ngIf=\"track\">\n    <header class=\"artist-header\">\n        <div *ngIf=\"track.album.images.length > 0\">\n            <img class=\"track-thumb rounded-circle\" src=\"{{track.album.images[0].url}}\">\n        </div>\n        <div class=\"track-deets-container\">\n            <h1>{{track.name}}</h1>\n            <h4 class=\"track-artist-header\" *ngFor=\"let artist of track.artists\">{{artist.name}} </h4>\n            <div class=\"track-link-container\">\n                <a class=\"track-preview\" href=\"{{track.preview_url}}\" target=\"_blank\">Preview track</a>\n                <a class=\"track-view\" href=\"{{track.external_urls.spotify}}\">View in Spotify</a>\n                <a class=\"btn btn-default btn-block\" routerLink=\"/album/{{track.album.id}}\">View Album Details</a>\n            </div>\n        </div>\n    </header>\n</div>","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { Http, Headers, Response, RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class SpotifyService {\n\n    private searchUrl: string;\n    private artistUrl: string;\n    private albumsUrl: string;\n    private albumUrl: string;\n    private trackUrl: string;\n    private userUrl: string;\n    private playlistUrl: string;\n    private clientID: string = environment.clientId;\n    private clientSecret: string = environment.clientSecret;\n\n    constructor(private _http:Http) {\n\n    }\n\n    getAuth = () => {\n\n        let headers = new Headers();\n        headers.append('Authorization', 'Basic ' + btoa(this.clientID + \":\" + this.clientSecret));\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\n        let params: URLSearchParams = new URLSearchParams();\n        params.set('grant_type', 'client_credentials');\n\n        let body = params.toString();\n\n        return this._http.post('https://accounts.spotify.com/api/token', body, { headers: headers })\n            .map(res => res.json());\n    }\n\n    searchMusic(query:string, type='artist', authToken:string) {\n\n        let headers = new Headers();\n        headers.append('Authorization', 'Bearer ' + authToken);\n\n        this.searchUrl = 'https://api.spotify.com/v1/search?query=' + query + '&offset=0&limit=20&type=' + type + '&market=US';\n\n        return this._http.get(this.searchUrl, { headers: headers })\n            .map(res => res.json());\n    }\n\n    getArtist(id:string, type='artist', authToken:string) {\n        \n        let headers = new Headers();\n        headers.append('Authorization', 'Bearer ' + authToken);\n\n        this.artistUrl = 'https://api.spotify.com/v1/artists/' + id;\n\n        return this._http.get(this.artistUrl, { headers: headers})\n            .map(res => res.json());\n    }\n\n    getAlbums(artistId:string, authToken:string) {\n        \n        let headers = new Headers();\n        headers.append('Authorization', 'Bearer ' + authToken);\n\n        this.albumsUrl = 'https://api.spotify.com/v1/artists/' + artistId + '/albums';\n\n        return this._http.get(this.albumsUrl, { headers: headers })\n            .map(res => res.json());\n    }\n\n    getAlbum(albumId:string, authToken:string) {\n\n        let headers = new Headers();\n        headers.append('Authorization', 'Bearer ' + authToken);\n        \n        this.albumUrl = 'https://api.spotify.com/v1/albums/' + albumId;\n        \n        return this._http.get(this.albumUrl, { headers: headers })\n            .map(res => res.json());\n    }\n\n    getTrack(trackId:string, authToken:string) {\n\n        let headers = new Headers();\n        headers.append('Authorization', 'Bearer ' + authToken);\n\n        this.trackUrl = 'https://api.spotify.com/v1/tracks/' + trackId;\n\n        return this._http.get(this.trackUrl, { headers: headers })\n            .map(res => res.json());\n    }\n\n    createPlaylist(\n        name:string = 'My Created Playlist', \n        isPublic: boolean = true, \n        description:string,\n        authToken:string) {\n\n        let headers = new Headers();\n        headers.append('Authorization', 'Bearer ' + authToken);\n\n        let body = {\n            name: name,\n            public: isPublic,\n            description: description\n        }\n\n        let userId = this.getUserProfile(authToken)\n                         .subscribe(user => {\n                            userId = user.id });\n\n        this.playlistUrl = 'https://api.spotify.com/v1/users/' + userId + '/playlists';\n\n        return this._http.post(this.playlistUrl, body, { headers: headers })\n            .map(res => res.json());\n    }\n\n    private getUserProfile(authToken:string) {\n\n        let headers = new Headers();\n        headers.append('Authorization', 'Bearer ' + authToken);\n\n        this.userUrl = 'https://api.spotify.com/v1/me';\n\n        return this._http.get(this.userUrl, { headers: headers })\n            .map(res => res.json());\n    }\n}","import { FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\n\nexport function forbiddenCharacterValidator(nameRe: RegExp): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} | null => {\n      const forbidden = nameRe.test(control.value);\n      return forbidden ? {'forbiddenName': {value: control.value}} : null;\n    };\n  }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  clientId: '1c45a2c5c4f64c67ae427e159549119d',\n  clientSecret: 'e19468d45daa4946bf9c1e85367f0a0a'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}